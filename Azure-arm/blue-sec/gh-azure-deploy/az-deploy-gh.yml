name: CI-Blue 🛡️ ⚔️ 🗡️💙💎

on:
  push:
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Security audit
        run: npm audit --audit-level=critical

      - name: Snyk security scan
        uses: snyk/actions@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create CodeQL config file
        run: |
          mkdir -p .github/codeql
          echo "language: javascript" >> $GITHUB_WORKSPACE/.github/codeql/codeql-config.yml   

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          config-file: ./.github/codeql/codeql-config.yml

      - name: Codecov analysis
        uses: codecov/codecov-action@v1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: target/surefire-reports

      - name: Upload code coverage report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: target/site/jacoco

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Scan for misconfigurations in Infrastructure as Code
        uses: azure/microsoft-security-devops@v1
        with:
          categories: 'IaC'

      - name: Deploy to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_APP_NAME }}
          slot-name: 'production'
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          package: .

      - name: Azure Web App Configuration
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ secrets.AZURE_APP_NAME }}
          slot-name: 'production'
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          general-settings-json: '{"alwaysOn": true, "minTlsVersion": "1.2"}'